name: NBA Auto Post (PT day complete)

on:
  schedule:
    # Проверяем каждые 10 минут
    - cron: "*/10 * * * *"
  workflow_dispatch: {}  # Оставим ручной запуск на всякий случай

permissions:
  contents: write  # нужно, чтобы коммитить маркер .posted/pt-YYYYMMDD.done

concurrency:
  group: nba-autopost-pt
  cancel-in-progress: true

jobs:
  autopost:
    runs-on: ubuntu-latest
    env:
      TELEGRAM_BOT_TOKEN: ${{ secrets.TELEGRAM_BOT_TOKEN }}
      TELEGRAM_CHAT_ID:   ${{ secrets.TELEGRAM_CHAT_ID }}
      TEAM_EMOJI_JSON:    ${{ secrets.TEAM_EMOJI_JSON }}
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 0  # чтобы видеть историю и пушить маркеры

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: "3.11"

      - name: Install deps
        run: |
          pip install requests beautifulsoup4

      - name: Check if PT day is fully completed on ESPN
        id: check
        run: |
          python - << 'PY'
          import os, sys, requests
          from datetime import datetime, timedelta
          from zoneinfo import ZoneInfo
          from pathlib import Path

          tz_pt = ZoneInfo("America/Los_Angeles")
          tz_et = ZoneInfo("America/New_York")

          now_pt = datetime.now(tz_pt)
          # Между 00:00–06:00 PT считаем, что речь ещё о ВЧЕРАШНЕМ PT-дне
          base_pt = now_pt.date() if now_pt.hour >= 6 else (now_pt.date() - timedelta(days=1))
          ymd_pt  = base_pt.strftime("%Y-%m-%d")

          # Не запускаться повторно — если уже есть маркер
          marker = Path(".posted") / f"pt-{base_pt.strftime('%Y%m%d')}.done"
          if marker.exists():
            print(f"Already posted for PT {ymd_pt}, skip.")
            with open(os.environ["GITHUB_OUTPUT"], "a") as fh:
              fh.write(f"ready=false\n")
              fh.write(f"pt_ymd={ymd_pt}\n")
            sys.exit(0)

          # Какие ET-даты покрывают один PT-день
          start_pt = datetime(base_pt.year, base_pt.month, base_pt.day, 0, 0, tzinfo=tz_pt)
          end_pt   = datetime(base_pt.year, base_pt.month, base_pt.day, 23, 59, tzinfo=tz_pt)
          et_dates = sorted({ start_pt.astimezone(tz_et).date(), end_pt.astimezone(tz_et).date() })
          print("PT day:", ymd_pt, "covers ET dates:", [d.strftime("%Y-%m-%d") for d in et_dates])

          def fetch_et(d):
            url = f"https://site.api.espn.com/apis/site/v2/sports/basketball/nba/scoreboard?dates={d.strftime('%Y%m%d')}"
            r = requests.get(url, timeout=20)
            r.raise_for_status()
            return r.json().get("events") or []

          # Грузим события двух ET-дней
          events = []
          for d in et_dates:
            events.extend(fetch_et(d))

          def ev_pt_date(ev):
            # Время события (UTC) -> PT -> date()
            dt = datetime.fromisoformat(ev["date"].replace("Z","+00:00")).astimezone(tz_pt)
            return dt.date()

          events_pt = [ev for ev in events if ev_pt_date(ev) == base_pt]
          print(f"ESPN events for PT {ymd_pt}: {len(events_pt)}")

          def is_completed(ev):
            t = ((ev or {}).get("status") or {}).get("type") or {}
            return bool(t.get("completed", False))

          ready = "true" if (events_pt and all(is_completed(ev) for ev in events_pt)) else "false"
          print("all_completed:", ready)

          with open(os.environ["GITHUB_OUTPUT"], "a") as fh:
            fh.write(f"ready={ready}\n")
            fh.write(f"pt_ymd={ymd_pt}\n")
          PY

      - name: Run bot for that PT day
        if: steps.check.outputs.ready == 'true'
        env:
          TELEGRAM_BOT_TOKEN: ${{ secrets.TELEGRAM_BOT_TOKEN }}
          TELEGRAM_CHAT_ID:   ${{ secrets.TELEGRAM_CHAT_ID }}
          TEAM_EMOJI_JSON:    ${{ secrets.TEAM_EMOJI_JSON }}
          REPORT_DATE_PT:     ${{ steps.check.outputs.pt_ymd }}  # <-- пробрасываем PT-день в скрипт
        run: |
          python3 nba_daily_results_bot.py

      - name: Mark PT day as posted
        if: steps.check.outputs.ready == 'true'
        run: |
          mkdir -p .posted
          Y="${{ steps.check.outputs.pt_ymd }}"
          Y="${Y//-/}"  # удалить дефисы
          echo "posted at $(date -u +'%Y-%m-%dT%H:%M:%SZ')" > ".posted/pt-${Y}.done"
          git config user.name  "github-actions[bot]"
          git config user.email "41898282+github-actions[bot]@users.noreply.github.com"
          git add .posted
          git commit -m "NBA posted for PT ${{ steps.check.outputs.pt_ymd }}"
          git push
