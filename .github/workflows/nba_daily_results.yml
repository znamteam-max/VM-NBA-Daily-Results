name: NBA daily results to Telegram

on:
  schedule:
    - cron: "35 5 * * *"   # 06:35 Europe/London (GitHub Actions cron ‚Äî –≤ UTC)
  workflow_dispatch:

jobs:
  run:
    runs-on: ubuntu-latest
    permissions:
      contents: read
    timeout-minutes: 10
    concurrency:
      group: nba-daily-results
      cancel-in-progress: false

    steps:
      - name: Checkout repo
        uses: actions/checkout@v4

      - name: Setup Python
        uses: actions/setup-python@v5
        with:
          python-version: "3.11"
          cache: "pip"

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install requests beautifulsoup4 lxml

      # 1) –ë—ã—Å—Ç—Ä–∞—è –ø—Ä–æ–≤–µ—Ä–∫–∞ —Å–µ–∫—Ä–µ—Ç–∞ (–Ω–µ –≤—ã–≤–æ–¥–∏–º —Å–∞–º–∏ ID)
      - name: Sanity check TEAM_EMOJI_JSON
        env:
          TEAM_EMOJI_JSON: ${{ secrets.TEAM_EMOJI_JSON }}
        run: |
          python - <<'PY'
          import os, json, re
          s = os.getenv('TEAM_EMOJI_JSON')
          print('TEAM_EMOJI_JSON present:', bool(s))
          if not s: raise SystemExit(0)
          try:
              d = json.loads(s)
          except Exception as e:
              print('JSON error:', e); raise
          print('Keys total:', len(d))
          bad = [k for k in d if len(k) != 3]
          if bad: print('Non-canonical keys:', ','.join(bad))
          looks_like_ids = sum(1 for v in d.values() if re.fullmatch(r'(?:id:)?\d{10,}', str(v).strip()))
          print('Values that look like custom_emoji_id:', looks_like_ids, 'of', len(d))
          PY

      # 2) –°–ø—Ä–æ—Å–∏–º —É Telegram, —Å–∫–æ–ª—å–∫–æ –∏–∑ —ç—Ç–∏—Ö ID –æ–Ω —Ä–µ–∞–ª—å–Ω–æ —É–∑–Ω–∞—ë—Ç
      - name: Validate custom emoji IDs against Telegram
        env:
          TEAM_EMOJI_JSON:   ${{ secrets.TEAM_EMOJI_JSON }}
          TELEGRAM_BOT_TOKEN: ${{ secrets.TELEGRAM_BOT_TOKEN }}
        run: |
          python - <<'PY'
          import os, json, re, urllib.parse, urllib.request
          s = os.getenv('TEAM_EMOJI_JSON'); token = os.getenv('TELEGRAM_BOT_TOKEN')
          if not (s and token):
              print('Skip: no TEAM_EMOJI_JSON or TELEGRAM_BOT_TOKEN'); raise SystemExit(0)
          d = json.loads(s)
          ids = []
          for v in d.values():
              t = str(v).strip()
              m = re.fullmatch(r'(?:id:)?(\d{10,})', t)
              if m: ids.append(m.group(1))
          uniq = list(dict.fromkeys(ids))
          if not uniq:
              print('No numeric IDs found'); raise SystemExit(0)
          data = urllib.parse.urlencode({'custom_emoji_ids': ','.join(uniq)}).encode()
          url = f"https://api.telegram.org/bot{token}/getCustomEmojiStickers"
          with urllib.request.urlopen(url, data=data, timeout=20) as r:
              j = json.loads(r.read().decode('utf-8'))
          ok = j.get('ok'); res = j.get('result') or []
          print('Bot API ok:', ok, '| recognized IDs:', len(res), 'of', len(uniq))
          if not ok or len(res) == 0:
              print('‚ö†Ô∏è Telegram –Ω–µ –ø—Ä–∏–∑–Ω–∞–ª –Ω–∏ –æ–¥–∏–Ω ID ‚Äî –≤ —Å–æ–æ–±—â–µ–Ω–∏–∏ –±—É–¥–µ—Ç fallback üèÄ')
          elif len(res) < len(uniq):
              print('‚ö†Ô∏è –ß–∞—Å—Ç—å ID –Ω–µ —Ä–∞—Å–ø–æ–∑–Ω–∞–Ω–∞ ‚Äî –ø—Ä–æ–≤–µ—Ä—å –∏—Å—Ç–æ—á–Ω–∏–∫ —ç—Ç–∏—Ö ID.')
          PY

      # 3) –û—Ç–ø—Ä–∞–≤–∏–º –æ–¥–Ω–æ —Ç–µ—Å—Ç–æ–≤–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ —Å NYK —á–µ—Ä–µ–∑ <tg-emoji>
      - name: Send one test emoji (NYK)
        if: ${{ always() }}
        env:
          TEAM_EMOJI_JSON:    ${{ secrets.TEAM_EMOJI_JSON }}
          TELEGRAM_BOT_TOKEN: ${{ secrets.TELEGRAM_BOT_TOKEN }}
          TELEGRAM_CHAT_ID:   ${{ secrets.TELEGRAM_CHAT_ID }}
        run: |
          python - <<'PY'
          import os, json, re, urllib.parse, urllib.request
          try:
              d = json.loads(os.getenv('TEAM_EMOJI_JSON','{}'))
          except Exception:
              d = {}
          val = str(d.get('NYK','')).strip()
          m = re.fullmatch(r'(?:id:)?(\d{10,})', val)
          if m:
              text = f'<tg-emoji emoji-id="{m.group(1)}">üèÄ</tg-emoji> –¢–µ—Å—Ç –ª–æ–≥–æ—Ç–∏–ø–∞ NYK'
          else:
              text = '–í —Å–µ–∫—Ä–µ—Ç–µ –Ω–µ—Ç ID –¥–ª—è NYK'
          url = f"https://api.telegram.org/bot{os.getenv('TELEGRAM_BOT_TOKEN')}/sendMessage"
          data = urllib.parse.urlencode({
              'chat_id': os.getenv('TELEGRAM_CHAT_ID'),
              'text': text,
              'parse_mode': 'HTML'
          }).encode()
          with urllib.request.urlopen(url, data=data, timeout=20) as r:
              print('Test message status:', r.status)
          PY

      # 4) –ó–∞–ø—É—Å–∫–∞–µ–º –±–æ—Ç–∞ ‚Äî —Å—é–¥–∞ –ø—Ä–æ–∫–∏–¥—ã–≤–∞–µ–º —Å–µ–∫—Ä–µ—Ç!
      - name: Run bot
        env:
          TELEGRAM_BOT_TOKEN: ${{ secrets.TELEGRAM_BOT_TOKEN }}
          TELEGRAM_CHAT_ID:   ${{ secrets.TELEGRAM_CHAT_ID }}
          TEAM_EMOJI_JSON:    ${{ secrets.TEAM_EMOJI_JSON }}
          PYTHONUNBUFFERED:   "1"
        run: |
          python nba_daily_results_bot.py
